# """
# - sắp xếp list
# - ko sử dụng các built-in function

# - bubble sort
# - insert sort
# - merge sort

# """
# a = [3, 6]
# b = [3, 6, 9]
# c = [3, 6, 9, 10]
# d = [3, 6, 9, 10, 28]
# e = [3, 6, 9, 10, 28, 36]

# def sort_2_element(a: list)-> list:
#     if a[0] < a[1]:
#         return [a[0], a[1]]
#     elif a[0] > a[1]:
#         return [a[1], a[0]]
#     elif a[0] == a[1]:
#         return [a[0], a[1]]

# def sort_4_element(a: list)-> list:
#     ...

# def sort_6_element(a: list)-> list:
#     ...

# def sort_3_element(a: list)-> list:
#     if a[0] < a[1]:
#         if a[1] < a[2]:
#             x = [a[0], a[1], a[2]]
#         elif a[1] > a[2]:
#             x = [a[2], a[1], a[0]] 
#     elif a[0] > a[1]:
#         if a[1] < a[2]:
#             x = [a[0], a[1], a[2]]
#         elif a[1] > a[2]:
#             x = [a[2], a[1], a[0]] 
#     y = sorted(a)
#     if y == x:
#         return x
#     else: 
#         return sort_3_element(x)

# def check_sort_3_element(a: list)-> list:
#     if a[0] < a[1] < a[2]:
#         return True
#     else: 
#         return False

# # x = sort_3_element([6, 9, 3])
# # # # y = check_sort_3_element([6, 9, 3])
# # # # print(f"kết quả sắp xếp list: {y}")
# # print(f"list sau khi được sắp xếp: {x}")
# # a = [3, 9, 6]
# # x = [3, 6, 9]
# # y  = sorted(a)
# # print(y == x)



# def check(a : list) -> bool:
#     print(f'check: {a}')
#     if a[0] < a[1] and a[1] < a[2]:
#         return True
#     else:
#         return False
    
# def sort_3_els(a : list) -> list:
#     if a[0] < a[1]:
#         if a[1] < a[2]:
#             a = [a[0],a[1],a[2]]
#         else:
#             a = [a[0],a[2],a[1]]
#     else:
#         a = [a[1],a[0],a[2]]
#     print( f'sorted-1: {a}' )
#     if check(a) == True:
#         print( f'sorted: {a}' )
#         return a 
#     else:
#         # sort_3_els([6, 9, 3])
#         return sort_3_els([6, 9, 3])
#     print( f'sorted-2: {a}' )

# # print(sort_3_els([3,9,6]))
# # print(sort_3_els([6,9,3]))
# print(sort_3_els([9,6,3]))


a = [3, 7, 99, 43, 1, 47, 90, 58]

# def 

def sort_func(a: list) -> list:
    y = sorted(a)
    while y == a:
        for i in range():
            ...
    return a



# mã giả 
"""
B1: chia nhỏ list thành các phần tử 2 hoặc 3
B2: so sánh các list nhỏ
    - sort_2_element()
    - sort_3_element()
b3: ghép lại thành list tổng thể
b4:
    - nếu ghép lại mà đúng -> kết thưccs
    - nếu ghép lại mà sai -. tiếp tục bước 2

"""

def bubble_sort(array):
    n = len(array)

    for i in range(n):
        already_sorted = True
        for j in range(n - i - 1):
            if array[j] > array[j + 1]:
                array[j], array[j + 1] = array[j + 1], array[j]
                already_sorted = False
        if already_sorted:
            break

    return array
a = [468, 594, 512, 283, 880, 634, 331, 288, 557, 548, 521, 104, 818, 388, 433, 428, 506, 837, 28, 517, 597, 110, 570, 668, 344, 84, 219, 712, 33, 707, 292, 276, 594, 729, 262, 7, 792, 589, 820, 778, 212, 410, 46, 335, 126, 176, 172, 499, 187, 784, 808, 805, 566, 146, 225, 797, 118, 720, 888, 798, 737, 483, 151, 402, 71, 255, 250, 14, 690, 41, 868, 744, 527, 82, 384, 52, 74, 606, 414, 631, 834, 221, 6, 834, 838, 377, 762, 757, 506, 156, 264, 64, 93, 846, 21, 473, 565, 389, 331, 794, 835, 78, 319, 873, 319, 80, 122, 244, 228, 488, 461, 816, 296, 562, 193, 172, 884, 119, 641, 438, 47, 467, 272, 461, 71, 173, 381, 6, 129, 216, 755, 702, 730, 351, 186, 199, 851, 281, 471, 403, 690, 247, 416, 60, 607, 534, 68, 593, 875, 430, 378, 686, 130, 738, 255, 839, 545, 326, 802, 310, 355, 547, 496, 380, 226, 6, 662, 658, 813, 831, 217, 79, 712, 280, 756, 224, 500, 792, 111, 737, 580, 27, 311, 284, 394, 170, 674, 196, 681, 80, 809, 659, 147, 353, 441, 505, 829, 663, 644, 277, 558, 837, 773, 667, 347, 643, 787, 275, 754, 855, 184, 67, 120, 477, 334, 756, 248, 873, 58, 86, 154, 399, 733, 197, 114, 878, 16, 763, 233, 273, 525, 239, 854, 590, 554, 718, 273, 861, 798, 97, 859, 502, 30, 711, 600, 891, 399, 719, 397, 852, 509, 41, 275, 335, 703, 780, 611, 540, 120, 220, 643, 140, 254, 426, 259, 623, 315, 432, 572, 194, 364, 584, 543, 379, 310, 222, 857, 838, 603, 130, 889, 790, 387, 518, 520, 430, 393, 644, 165, 544, 754, 404, 64, 815, 273, 891, 354, 795, 110, 450, 305, 456, 52, 223, 549, 144, 71, 237, 886, 864, 847, 701, 147, 623, 676, 659, 524, 26, 625, 112, 761, 213, 811, 833, 112, 269, 144, 568, 31, 275, 332, 341, 412, 553, 846, 898, 861, 224, 582, 815, 770, 502, 813, 152, 297, 610, 767, 814, 377, 845, 740, 331, 126, 191, 532, 864, 835, 887, 887, 791, 398, 717, 421, 865, 890, 476, 615, 662, 437, 391, 306, 332, 335, 30, 228, 506, 324, 336, 462, 320, 168, 55, 690, 663, 313, 33, 618, 267, 632, 804, 184, 337, 517, 720, 535, 134, 806, 696, 385, 693, 287, 260, 593, 607, 342, 598, 497, 595, 715, 679, 714, 735, 502, 223, 856, 739, 62, 751, 636, 100, 709, 242, 384, 724, 91, 221, 430, 243, 859, 589, 144, 677, 164, 177, 592, 474, 183, 438, 896, 851, 808, 483, 761, 365, 704, 825, 812, 72, 668, 555, 664, 78, 301, 309, 880, 357, 15, 313, 491, 85, 269, 693, 547, 574, 300, 687, 801, 363, 873, 184, 628, 344, 357, 103, 534, 185, 578, 70, 151, 672, 596, 696, 844, 798, 733, 771, 724, 226, 108, 253, 178, 658, 356, 859, 672, 862, 324, 541, 414, 257, 637, 373, 477, 235, 660, 365, 813, 426, 599, 470, 891, 254, 864, 195, 387, 243, 646, 49, 510, 37, 50, 651, 175, 424, 358, 368, 843, 696, 82, 739, 571, 321, 570, 337, 408, 451, 722, 781, 532, 873, 385, 362, 353, 736, 405, 849, 561, 571, 123, 484, 112, 57, 329, 624, 201, 222, 813, 820, 604, 488, 184, 827, 128, 473, 127, 391, 893, 46, 739, 308, 325, 330, 869, 573, 632, 885, 406, 769, 288, 392, 847, 163, 437, 104, 298, 621, 354, 441, 771, 510, 772, 488, 65, 342, 402, 108, 418, 399, 836, 312, 217, 157, 352, 651, 205, 820, 600, 288, 310, 5, 20, 393, 571, 298, 660, 241, 499, 53, 225, 269, 715, 805, 669, 509, 372, 839, 290, 89, 476, 347, 733, 158, 149, 605, 444, 557, 625, 519, 519, 400, 485, 792, 250, 860, 606, 857, 392, 215, 312, 523, 362, 332, 137, 589, 688, 70, 176, 721, 616, 792, 818, 194, 260, 88, 195, 171, 427, 794, 536, 502, 650, 678, 413, 415, 147, 196, 855, 447, 567, 533, 761, 597, 565, 861, 108, 772, 868, 363, 91, 349, 744, 693, 192, 763, 316, 339, 567, 577, 99, 357, 525, 68, 736, 583, 313, 884, 448, 349, 557, 634, 641, 539, 773, 186, 6, 406, 183, 181, 329, 256, 373, 538, 493, 522, 581, 153, 759, 261, 207, 48, 136, 637, 454, 728, 848, 232, 550, 268, 133, 632, 607, 84, 444, 67, 95, 186, 342, 841, 762, 254, 651, 181, 568, 377, 701, 4, 430, 749, 556, 427, 173, 326, 681, 391, 73, 847, 376, 885, 512, 595, 151, 710, 882, 302, 215, 622, 734, 644, 116, 850, 446, 83, 677, 218, 219, 168, 576, 158, 301, 27, 679, 788, 793, 347, 633, 347, 186, 53, 44, 424, 900, 51, 475, 373, 878, 634, 27, 805, 334, 740, 594, 287, 316, 267, 550, 87, 697, 445, 589, 664, 94, 172, 202, 657, 818, 85, 898, 697, 634, 727, 534, 882, 358, 392, 52, 777, 506, 304, 274, 62, 740, 507, 559, 402, 495, 80, 262, 54, 63, 510, 199, 301, 202, 757, 721, 298, 342, 682, 223, 762, 603, 874, 659, 93, 343, 286, 652, 64, 374, 431, 230, 439, 371, 595, 242, 774, 518, 728, 525, 788, 177, 496, 598, 188, 224, 240, 305, 344, 246, 652, 142, 519, 294, 20, 592, 847, 558, 262, 183, 301, 894, 6, 212, 595, 232, 574, 200, 39, 817, 518, 589, 392, 166, 105, 643, 7, 632, 757, 538, 506, 646, 856, 574, 587, 149, 719, 798, 218, 761, 267, 507, 128, 344, 680, 447, 4, 166, 673, 894, 189, 41, 442, 447, 396, 179, 744, 272, 198, 522, 646, 340, 818, 91, 792, 193, 516, 134, 396, 537, 501, 348, 556, 162, 491, 754, 748, 300, 180, 64, 399, 839, 471, 718, 468, 91, 16, 896, 530, 421, 284, 125, 757, 107, 622, 380, 251, 318, 342, 12, 392, 128, 404, 438, 131, 396, 493, 122, 581, 810, 673]
x = bubble_sort(a)
print(x)